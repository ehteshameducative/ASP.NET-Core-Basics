// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using People.Data;

namespace People.Migrations
{
    [DbContext(typeof(PeopleContext))]
    [Migration("20201109113111_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9");

            modelBuilder.Entity("People.Models.Address", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Location")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("People.Models.Group", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("GroupName")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("People.Models.Person", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("PrimaryNumber")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("People");
                });

            modelBuilder.Entity("People.Models.PersonAddress", b =>
                {
                    b.Property<int>("PersonID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AddressID")
                        .HasColumnType("INTEGER");

                    b.HasKey("PersonID", "AddressID");

                    b.HasIndex("AddressID");

                    b.ToTable("PersonAddress");
                });

            modelBuilder.Entity("People.Models.PersonGroup", b =>
                {
                    b.Property<int>("PersonID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GroupID")
                        .HasColumnType("INTEGER");

                    b.HasKey("PersonID", "GroupID");

                    b.HasIndex("GroupID");

                    b.ToTable("PersonGroup");
                });

            modelBuilder.Entity("People.Models.PhoneNumber", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Number")
                        .HasColumnType("TEXT");

                    b.Property<int>("PersonID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("PersonID");

                    b.ToTable("PhoneNumbers");
                });

            modelBuilder.Entity("People.Models.PersonAddress", b =>
                {
                    b.HasOne("People.Models.Address", "Address")
                        .WithMany("PersonAddresses")
                        .HasForeignKey("AddressID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("People.Models.Person", "Person")
                        .WithMany("PersonAddresses")
                        .HasForeignKey("PersonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("People.Models.PersonGroup", b =>
                {
                    b.HasOne("People.Models.Group", "Group")
                        .WithMany("PersonGroups")
                        .HasForeignKey("GroupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("People.Models.Person", "Person")
                        .WithMany("PersonGroups")
                        .HasForeignKey("PersonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("People.Models.PhoneNumber", b =>
                {
                    b.HasOne("People.Models.Person", "Person")
                        .WithMany("SecondaryNumbers")
                        .HasForeignKey("PersonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
